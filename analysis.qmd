---
title: "research"
---

```{r}
#| label: load_packages
#| warning: false
#| message: false

# load packages
library(tidyverse)
library(tidymodels)
library(patchwork)
library(knitr)
library(kableExtra)
library(readxl)
library(stats)

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_bw(base_size = 20))

```

```{r}
#| label: load_data
#| warning: false
#| message: false

# read data from an Excel file
data <- read_excel("data/filtered_data_simplified.xlsx")

```

```{r}
#| label: pivot_data

wide_data <- data |>
  select(-Assay) |>
  pivot_wider(names_from = UniProt, values_from = NPX) 

```

```{r}
#| label: all_v_one

all_v_one_data <- wide_data |>
  filter(MS_TYPE != "Control") |>
  mutate(MS_TYPE = case_when(
    MS_TYPE == "RR" ~ "Not PP",
    MS_TYPE == "SP" ~ "Not PP",
    TRUE ~ MS_TYPE
  ))

```

```{r}
#| label: create_log_reg_data

log_model_data <- all_v_one_data |>
  select(-SampleID) |>
  mutate(MS_TYPE = as.factor(case_when(
    MS_TYPE == "PP" ~ 1,
    MS_TYPE == "Not PP" ~ 0
  )))

```

```{r}
#| label: create_nova_data

anova_model_data <- wide_data |>
  filter(MS_TYPE != "Control") |>
  group_by(MS_TYPE) |>
  summarise(across(Q9UBX1:Q9NZV1, \(x) mean(x, na.rm = TRUE))) 

```

```{r}
#| label: fixing-data

data_anova <- anova_model_data |>
  pivot_longer(cols = -MS_TYPE, names_to = "Protein", values_to = "Concentration")

proteins <- data_anova$Protein

```

```{r}
#| label: anova
#| eval: false

anova_results <- data_frame()

for (protein in proteins) {

  useful_data <- data_anova |>
    filter(Protein == protein)
  
  anova_result <- aov(Concentration ~ MS_TYPE, data = useful_data)
  anova_summary <- tidy(anova_result)

}

```

```{r}
#| label: log_reg

set.seed(123)

data_split <- initial_split(log_model_data)
train_data <- training(data_split)
test_data <- testing(data_split)

protien_model <- logistic_reg() |>
  set_engine("glm") |>
  fit(MS_TYPE ~ Q10588 + Q9Y240 + Q99972 + P16112 + P63313
      , data = train_data, family = "bionomal")

model_noQ10 <- logistic_reg() |>
  set_engine("glm") |>
  fit(MS_TYPE ~ Q9Y240 + Q99972 + P16112 + P63313
      , data = train_data, family = "bionomal")

model_noQ9 <- logistic_reg() |>
  set_engine("glm") |>
  fit(MS_TYPE ~ Q10588 + Q99972 + P16112 + P63313
      , data = train_data, family = "bionomal")

model_noQ99 <- logistic_reg() |>
  set_engine("glm") |>
  fit(MS_TYPE ~ Q10588 + Q9Y240 + P16112 + P63313
      , data = train_data, family = "bionomal")

model_noP1 <- logistic_reg() |>
  set_engine("glm") |>
  fit(MS_TYPE ~ Q10588 + Q9Y240 + Q99972 + P63313
      , data = train_data, family = "bionomal")

model_noP6 <- logistic_reg() |>
  set_engine("glm") |>
  fit(MS_TYPE ~ Q10588 + Q9Y240 + Q99972 + P16112
      , data = train_data, family = "bionomal")

```

```{r}
#| label: test_data

predict(protien_model, new_data = test_data) |>
  bind_cols(test_data) |>
  count(MS_TYPE, .pred_class)

protien_model |>
  tidy()

```

```{r}
#| label: test_data

predict(model_noQ10, new_data = test_data) |>
  bind_cols(test_data) |>
  count(MS_TYPE, .pred_class)

model_noQ10 |>
  tidy()

```

```{r}
#| label: test_data

predict(model_noQ9, new_data = test_data) |>
  bind_cols(test_data) |>
  count(MS_TYPE, .pred_class)

model_noQ9 |>
  tidy()

```

```{r}
#| label: test_data

predict(model_noQ99, new_data = test_data) |>
  bind_cols(test_data) |>
  count(MS_TYPE, .pred_class)

model_noQ99 |>
  tidy()

```

```{r}
#| label: test_data

predict(model_noP1, new_data = test_data) |>
  bind_cols(test_data) |>
  count(MS_TYPE, .pred_class)

model_noP1 |>
  tidy()

```

```{r}
#| label: test_data

predict(model_noP6, new_data = test_data) |>
  bind_cols(test_data) |>
  count(MS_TYPE, .pred_class)

model_noP6 |> 
  tidy()

```

